{"ast":null,"code":"import React from \"react\";\nimport { TransitionMotion, spring } from \"react-motion\";\nimport cxs from \"cxs\";\nimport { isEqual } from \"./isEqual\";\nimport { requestTimeout, clearRequestTimeout } from \"./utils\";\nclass TextLoop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.isUnMounting = false;\n    this.tickDelay = 0;\n    this.tickLoop = 0;\n    this.wordBox = null;\n    this.willLeave = () => {\n      const {\n        height\n      } = this.getDimensions();\n      return {\n        opacity: spring(this.getOpacity(), this.props.springConfig),\n        translate: spring(-height, this.props.springConfig)\n      };\n    };\n    this.willEnter = () => {\n      const {\n        height\n      } = this.getDimensions();\n      return {\n        opacity: this.getOpacity(),\n        translate: height\n      };\n    };\n    this.tick = () => {\n      if (!this.isUnMounting) {\n        this.setState((state, props) => {\n          const currentWordIndex = (state.currentWordIndex + 1) % state.elements.length;\n          const currentEl = state.elements[currentWordIndex];\n          const updatedState = {\n            currentWordIndex,\n            currentEl,\n            wordCount: (state.wordCount + 1) % 1000,\n            currentInterval: Array.isArray(props.interval) ? props.interval[currentWordIndex % props.interval.length] : props.interval\n          };\n          if (props.onChange) {\n            props.onChange(updatedState);\n          }\n          return updatedState;\n        }, () => {\n          if (this.state.currentInterval > 0) {\n            this.clearTimeouts();\n            this.tickLoop = requestTimeout(this.tick, this.state.currentInterval);\n          }\n        });\n      }\n    };\n    this.wrapperStyles = cxs(Object.assign(Object.assign({}, this.props.mask && {\n      overflow: \"hidden\"\n    }), {\n      display: \"inline-block\",\n      position: \"relative\",\n      verticalAlign: \"top\"\n    }));\n    this.elementStyles = cxs({\n      display: \"inline-block\",\n      left: 0,\n      top: 0,\n      whiteSpace: this.props.noWrap ? \"nowrap\" : \"normal\"\n    });\n    const elements = React.Children.toArray(props.children);\n    this.state = {\n      elements,\n      currentEl: elements[0],\n      currentWordIndex: 0,\n      wordCount: 0,\n      currentInterval: Array.isArray(props.interval) ? props.interval[0] : props.interval\n    };\n  }\n  componentDidMount() {\n    const {\n      delay\n    } = this.props;\n    const {\n      currentInterval,\n      elements\n    } = this.state;\n    if (currentInterval > 0 && elements.length > 1) {\n      this.tickDelay = requestTimeout(() => {\n        this.tickLoop = requestTimeout(this.tick, currentInterval);\n      }, delay);\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      interval,\n      children,\n      delay\n    } = this.props;\n    const {\n      currentWordIndex\n    } = this.state;\n    const currentInterval = Array.isArray(interval) ? interval[currentWordIndex % interval.length] : interval;\n    if (prevState.currentInterval !== currentInterval) {\n      this.clearTimeouts();\n      if (currentInterval > 0 && React.Children.count(children) > 1) {\n        this.tickDelay = requestTimeout(() => {\n          this.tickLoop = requestTimeout(this.tick, currentInterval);\n        }, delay);\n      } else {\n        this.setState((state, props) => {\n          const {\n            currentWordIndex: _currentWordIndex\n          } = state;\n          return {\n            currentInterval: Array.isArray(props.interval) ? props.interval[_currentWordIndex % props.interval.length] : props.interval\n          };\n        });\n      }\n    }\n    if (!isEqual(prevProps.children, children)) {\n      this.setState({\n        elements: React.Children.toArray(children)\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.isUnMounting = true;\n    this.clearTimeouts();\n  }\n  clearTimeouts() {\n    if (this.tickLoop != null) {\n      clearRequestTimeout(this.tickLoop);\n    }\n    if (this.tickDelay != null) {\n      clearRequestTimeout(this.tickDelay);\n    }\n  }\n  getOpacity() {\n    return this.props.fade ? 0 : 1;\n  }\n  getDimensions() {\n    if (this.wordBox == null) {\n      return {\n        width: 0,\n        height: 0\n      };\n    }\n    return this.wordBox.getBoundingClientRect();\n  }\n  getTransitionMotionStyles() {\n    const {\n      springConfig\n    } = this.props;\n    const {\n      wordCount,\n      currentEl\n    } = this.state;\n    return [{\n      key: `step-${wordCount}`,\n      data: {\n        currentEl\n      },\n      style: {\n        opacity: spring(1, springConfig),\n        translate: spring(0, springConfig)\n      }\n    }];\n  }\n  render() {\n    const {\n      className = \"\"\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: `${this.wrapperStyles} ${className}`\n    }, React.createElement(TransitionMotion, {\n      willLeave: this.willLeave,\n      willEnter: this.willEnter,\n      styles: this.getTransitionMotionStyles()\n    }, interpolatedStyles => {\n      const {\n        height,\n        width\n      } = this.getDimensions();\n      const parsedWidth = this.wordBox == null ? \"auto\" : width;\n      const parsedHeight = this.wordBox == null ? \"auto\" : height;\n      return React.createElement(\"div\", {\n        style: {\n          transition: `width ${this.props.adjustingSpeed}ms linear`,\n          height: parsedHeight,\n          width: parsedWidth\n        }\n      }, interpolatedStyles.map(config => React.createElement(\"div\", {\n        className: this.elementStyles,\n        ref: n => {\n          this.wordBox = n;\n        },\n        key: config.key,\n        style: {\n          opacity: config.style.opacity,\n          transform: `translateY(${config.style.translate}px)`,\n          position: this.wordBox == null ? \"relative\" : \"absolute\"\n        }\n      }, config.data.currentEl)));\n    }));\n  }\n}\nTextLoop.defaultProps = {\n  interval: 3000,\n  delay: 0,\n  adjustingSpeed: 150,\n  springConfig: {\n    stiffness: 340,\n    damping: 30\n  },\n  fade: true,\n  mask: false,\n  noWrap: true\n};\nexport default TextLoop;","map":{"version":3,"mappings":"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","names":["React","TransitionMotion","spring","cxs","isEqual","requestTimeout","clearRequestTimeout","TextLoop","Component","constructor","props","height","getDimensions","opacity","getOpacity","springConfig","translate","isUnMounting","setState","state","currentWordIndex","elements","length","currentEl","updatedState","wordCount","currentInterval","Array","isArray","interval","onChange","clearTimeouts","tickLoop","tick","mask","overflow","display","position","verticalAlign","left","top","whiteSpace","noWrap","Children","toArray","children","componentDidMount","delay","tickDelay","componentDidUpdate","prevProps","prevState","count","_currentWordIndex","componentWillUnmount","fade","wordBox","width","getBoundingClientRect","getTransitionMotionStyles","key","data","style","render","className","wrapperStyles","willLeave","willEnter","styles","interpolatedStyles","parsedWidth","parsedHeight","transition","adjustingSpeed","map","config","elementStyles","ref","n","transform","stiffness","damping"],"sources":["../../src/TextLoop.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}